warning: in the working copy of 'README.md', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'SECURITY.md', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/Event Horizon changelog b/Event Horizon changelog[m
[1mdeleted file mode 100644[m
[1mindex 306a719..0000000[m
[1m--- a/Event Horizon changelog[m	
[1m+++ /dev/null[m
[36m@@ -1,34 +0,0 @@[m
[31m-v1.0.0 Event Horizon[m
[31m-first version (18.06.2025)[m
[31m-[m
[31m-v1.0.1 Event Horizon[m
[31m-second version (25.06.2025)[m
[31m-+shell[m
[31m-[m
[31m-v1.0.2[m
[31m-third version (29.06.2025)[m
[31m-+mkdir (shell)[m
[31m-+rmdir (shell)[m
[31m-[m
[31m-v1.0.3 Event Horizon [m
[31m-fourth version (30.06.2025)[m
[31m-+time (shell)[m
[31m-+perf (shell)[m
[31m-Requirements for v1.0.3+: psutil library[m
[31m-[m
[31m-v1.0.4 Event Horizon[m
[31m-fifth version (02.07.2025)[m
[31m-+timer[m
[31m-+check updates[m
[31m-Requirements for v1.0.4+: packaging, requests and psutil libraries[m
[31m-[m
[31m-v1.0.4a Event Horizon[m
[31m-fifth version (02.07.2025)[m
[31m-+colors[m
[31m-Requirements for v1.0.4a+: packaging, requests, colorama and psutil libraries[m
[31m-[m
[31m-v1.0.5 Event Horizon[m
[31m-sixth version (03.07.2025)[m
[31m-+new loading screen [m
[31m-(Pylint: 9.01/10)[m
[31m-Requirements for v1.0.5+: packaging, requests, colorama and psutil libraries[m
[1mdiff --git a/check_update b/check_update[m
[1mdeleted file mode 100644[m
[1mindex 80e0d76..0000000[m
[1m--- a/check_update[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-v1.0.5[m
[1mdiff --git a/v1.0.5.py b/v1.0.5.py[m
[1mindex 49643cd..de8d47c 100644[m
[1m--- a/v1.0.5.py[m
[1m+++ b/v1.0.5.py[m
[36m@@ -119,7 +119,7 @@[m [mdef calc():[m
         except ValueError:[m
             print(Fore.RED + "⣏!⣽ Numbers only!" + Style.RESET_ALL)[m
             continue[m
[31m-        if input("⣦Exit? Y/N> ").upper() == "Y":[m
[32m+[m[32m        if input("⣦Exit? Y/N> ") == "Y":[m
             clear_screen()[m
             break[m
 def echo():[m
[36m@@ -255,13 +255,16 @@[m [mdef shell():[m
                 while True:[m
                     clear_screen()[m
                     print([m
[31m-                        Fore.RED + f"CPU:{psutil.cpu_percent()}% \nRAM: {      psutil.virtual_memory().percent}%" + Style.RESET_ALL)[m
[32m+[m[32m                        Fore.RED + f"CPU: {[m
[32m+[m[32m                            psutil.cpu_percent()}% \nRAM: {[m
[32m+[m[32m                            psutil.virtual_memory().percent}%" + Style.RESET_ALL)[m
                     time.sleep(1)[m
             except KeyboardInterrupt:[m
                 print(Fore.GREEN + "\n⣦ Monitor stopped." + Style.RESET_ALL)[m
                 clear_screen()[m
                 print("⣦Event Horizon shell\n")[m
 [m
[32m+[m
 def timer():[m
     timer_time = int(input("enter clock time in seconds> "))[m
     print(timer_time)[m
[1mdiff --git a/v1.0.6.py b/v1.0.6.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e7b02b3[m
[1m--- /dev/null[m
[1m+++ b/v1.0.6.py[m
[36m@@ -0,0 +1,431 @@[m
[32m+[m[32mimport os[m
[32m+[m[32mimport random[m
[32m+[m[32mimport shutil[m
[32m+[m[32mimport sys[m
[32m+[m[32mimport time[m
[32m+[m[32mfrom datetime import datetime[m
[32m+[m
[32m+[m[32mimport psutil[m
[32m+[m[32mimport requests[m
[32m+[m[32mfrom colorama import Back, Fore, Style[m
[32m+[m[32mfrom packaging import version[m
[32m+[m
[32m+[m[32m# Check updates[m
[32m+[m[32mshell_version = "v1.0.6"[m
[32m+[m[32mgithub_lastest_update = ([m
[32m+[m[32m    "https://raw.githubusercontent.com/QUIK1001/Event-Horizon/main/check_update"[m
[32m+[m[32m)[m
[32m+[m
[32m+[m
[32m+[m[32mdef check_updates():[m
[32m+[m[32m    try:[m
[32m+[m[32m        response = requests.get(github_lastest_update, timeout=3)[m
[32m+[m[32m        response.raise_for_status()[m
[32m+[m[32m        latest_version = response.text.strip()[m
[32m+[m[32m        if version.parse(latest_version) > version.parse(shell_version):[m
[32m+[m[32m            print([m
[32m+[m[32m                Fore.RED[m
[32m+[m[32m                + f"Update! {shell_version} < {latest_version}"[m
[32m+[m[32m                + Style.RESET_ALL[m
[32m+[m[32m            )[m
[32m+[m[32m            print([m
[32m+[m[32m                Fore.CYAN[m
[32m+[m[32m                + "Download: https://github.com/QUIK1001/Event-Horizon"[m
[32m+[m[32m                + Style.RESET_ALL[m
[32m+[m[32m            )[m
[32m+[m[32m            return True[m
[32m+[m[32m        else:[m
[32m+[m[32m            print(Fore.GREEN + "Actual version" + Style.RESET_ALL)[m
[32m+[m[32m            return False[m
[32m+[m[32m    except requests.exceptions.RequestException as e:[m
[32m+[m[32m        print(Fore.RED + f"Error connecting: {str(e)}" + Style.RESET_ALL)[m
[32m+[m[32m        return False[m
[32m+[m
[32m+[m
[32m+[m[32m# Clear[m
[32m+[m[32mdef clear_screen():[m
[32m+[m[32m    os.system("clear" if os.name == "posix" else "cls")[m
[32m+[m
[32m+[m
[32m+[m[32m# Loading screen[m
[32m+[m[32mdef event_horizon():[m
[32m+[m[32m    art_symbols = ["-", "\\", "|", "/"][m
[32m+[m[32m    ascii_art_EH = [[m
[32m+[m[32m        "             ⣀⣴⣿⣿⣿⣿⣿⣿⣶⣄          ",[m
[32m+[m[32m        "            ⣶⣿⣿⡿⠛⠉⠉⠉⠛⢿⣿⣿⣷⣄       ",[m
[32m+[m[32m        "        ⢀⣴⣿⣿⣿⠋⡀⠀⠀⠀⠀⠀⠀⠙⣿⣿⣿⣿⣦⡀     ",[m
[32m+[m[32m        "⠀⠀⣀⣰⣶⣿⣿⣿⣿⣿⣿⣀⣀⣀⣀⣀⣀⣰⣰⣶⣿⣿⣿⣿⣿⣿⣷⣦⣤⣀   ",[m
[32m+[m[32m        " ⠉⠉⠉⠈⠉⠛⠛⠛⠛⣿⣿⡽⣏⠉⠉⠉⠉⠉⣽⣿⠛⠉⠉⠉⠉⠉⠉⠉⠁   ",[m
[32m+[m[32m        "             ⠉⠻⣷⣦⣄⣀⣠⣴⣾⡿⠃         ",[m
[32m+[m[32m        "                 ⠛⠿⠿⠿⠟⠋          ",[m
[32m+[m[32m    ][m
[32m+[m[32m    for step in range(10, 0, -1):[m
[32m+[m[32m        clear_screen()[m
[32m+[m[32m        spaces = " " * step[m
[32m+[m[32m        for line in ascii_art_EH:[m
[32m+[m[32m            print(Fore.GREEN + spaces + line + spaces + Style.RESET_ALL)[m
[32m+[m[32m        time.sleep(0.1)[m
[32m+[m[32m    clear_screen()[m
[32m+[m[32m    for line in ascii_art_EH:[m
[32m+[m[32m        print(Back.WHITE + Fore.BLACK + Style.BRIGHT + line + Style.RESET_ALL)[m
[32m+[m[32m    print([m
[32m+[m[32m        Fore.RED[m
[32m+[m[32m        + " " * 10[m
[32m+[m[32m        + "Event Horizon\n"[m
[32m+[m[32m        + " " * 10[m
[32m+[m[32m        + shell_version[m
[32m+[m[32m        + Style.RESET_ALL[m
[32m+[m[32m    )[m
[32m+[m[32m    for i in range(8):[m
[32m+[m[32m        sys.stdout.write([m
[32m+[m[32m            Fore.GREEN[m
[32m+[m[32m            + "\r"[m
[32m+[m[32m            + " " * 10[m
[32m+[m[32m            + "loading "[m
[32m+[m[32m            + art_symbols[i % 4][m
[32m+[m[32m            + Style.RESET_ALL[m
[32m+[m[32m        )[m
[32m+[m[32m        time.sleep(0.5)[m
[32m+[m[32m    clear_screen()[m
[32m+[m[32m    print("---=Event Horizon=---")[m
[32m+[m
[32m+[m
[32m+[m[32m# Calc[m
[32m+[m[32mdef calc():[m
[32m+[m[32m    while True:[m
[32m+[m[32m        try:[m
[32m+[m[32m            calc_num1 = int(input("⣦First number> "))[m
[32m+[m[32m            calc_act = input("⣦Action +,-,*,/> ")[m
[32m+[m[32m            calc_num2 = int(input("⣦Second number> "))[m
[32m+[m[32m            if calc_act == "+":[m
[32m+[m[32m                print([m
[32m+[m[32m                    calc_num1,[m
[32m+[m[32m                    calc_act,[m
[32m+[m[32m                    calc_num2,[m
[32m+[m[32m                    Fore.GREEN + "equals> " + Style.RESET_ALL,[m
[32m+[m[32m                    calc_num1 + calc_num2,[m
[32m+[m[32m                )[m
[32m+[m[32m            elif calc_act == "-":[m
[32m+[m[32m                print([m
[32m+[m[32m                    calc_num1,[m
[32m+[m[32m                    calc_act,[m
[32m+[m[32m                    calc_num2,[m
[32m+[m[32m                    Fore.GREEN + "equals> " + Style.RESET_ALL,[m
[32m+[m[32m                    calc_num1 - calc_num2,[m
[32m+[m[32m                )[m
[32m+[m[32m            elif calc_act == "*":[m
[32m+[m[32m                print([m
[32m+[m[32m                    calc_num1,[m
[32m+[m[32m                    calc_act,[m
[32m+[m[32m                    calc_num2,[m
[32m+[m[32m                    Fore.GREEN + "equals> " + Style.RESET_ALL,[m
[32m+[m[32m                    calc_num1 * calc_num2,[m
[32m+[m[32m                )[m
[32m+[m[32m            elif calc_act == "/":[m
[32m+[m[32m                if calc_num2 != 0:[m
[32m+[m[32m                    print([m
[32m+[m[32m                        calc_num1,[m
[32m+[m[32m                        calc_act,[m
[32m+[m[32m                        calc_num2,[m
[32m+[m[32m                        Fore.GREEN + "equals> " + Style.RESET_ALL,[m
[32m+[m[32m                        calc_num1 / calc_num2,[m
[32m+[m[32m                    )[m
[32m+[m[32m                else:[m
[32m+[m[32m                    print(Fore.RED + "⣏!⣽ DIV/0!" + Style.RESET_ALL)[m
[32m+[m[32m        except ValueError:[m
[32m+[m[32m            print(Fore.RED + "⣏!⣽ Numbers only!" + Style.RESET_ALL)[m
[32m+[m[32m            continue[m
[32m+[m[32m        if input("⣦Exit? Y/N> ").upper() == "Y":[m
[32m+[m[32m            clear_screen()[m
[32m+[m[32m            break[m
[32m+[m
[32m+[m
[32m+[m[32m# Echo[m
[32m+[m[32mdef echo():[m
[32m+[m[32m    echo_text = input("⣦Enter your text: ")[m
[32m+[m[32m    print("⣦Your text:", echo_text)[m
[32m+[m[32m    time.sleep(2)[m
[32m+[m[32m    clear_screen()[m
[32m+[m
[32m+[m
[32m+[m[32m# ASCII arts[m
[32m+[m[32mdef ascii_arts():[m
[32m+[m[32m    ascii_cats = [[m
[32m+[m[32m        """ /|_/|[m
[32m+[m[32m( o.o )[m
[32m+[m[32m > ^ < """,[m
[32m+[m[32m        """  /|_/|[m
[32m+[m[32m =( °w° )=[m
[32m+[m[32m  )   (  """,[m
[32m+[m[32m    ][m
[32m+[m[32m    ascii_galaxie = [[m
[32m+[m[32m        """    . * .[m
[32m+[m[32m  * . * . *[m
[32m+[m[32m. * . * . * .[m
[32m+[m[32m  * . * . *[m
[32m+[m[32m    . * ."""[m
[32m+[m[32m    ][m
[32m+[m[32m    all_ascii_arts = ascii_cats + ascii_galaxie[m
[32m+[m[32m    print(random.choice(all_ascii_arts))[m
[32m+[m[32m    time.sleep(2)[m
[32m+[m[32m    clear_screen()[m
[32m+[m
[32m+[m
[32m+[m[32m# OS info[m
[32m+[m[32mdef os_info():[m
[32m+[m[32m    clear_screen()[m
[32m+[m[32m    print(Fore.GREEN + "             ⣀⣴⣿⣿⣿⣿⣿⣿⣶⣄")[m
[32m+[m[32m    print("            ⣶⣿⣿⡿⠛⠉⠉⠉⠛⢿⣿⣿⣷⣄")[m
[32m+[m[32m    print("        ⢀⣴⣿⣿⣿⠋⡀⠀⠀⠀⠀⠀⠀⠙⣿⣿⣿⣿⣦⡀")[m
[32m+[m[32m    print("⠀⠀⣀⣰⣶⣿⣿⣿⣿⣿⣿⣀⣀⣀⣀⣀⣀⣰⣰⣶⣿⣿⣿⣿⣿⣿⣷⣦⣤⣀")[m
[32m+[m[32m    print(" ⠉⠉⠉⠈⠉⠛⠛⠛⠛⣿⣿⡽⣏⠉⠉⠉⠉⠉⣽⣿⠛⠉⠉⠉⠉⠉⠉⠉⠁")[m
[32m+[m[32m    print("             ⠉⠻⣷⣦⣄⣀⣠⣴⣾⡿⠃")[m
[32m+[m[32m    print("                 ⠛⠿⠿⠿⠟⠋")[m
[32m+[m[32m    print("Event Horizon")[m
[32m+[m[32m    print(f"shell ver> {shell_version}")[m
[32m+[m[32m    print("by quik" + Style.RESET_ALL)[m
[32m+[m[32m    time.sleep(2.5)[m
[32m+[m[32m    clear_screen()[m
[32m+[m
[32m+[m
[32m+[m[32m# Shutdown[m
[32m+[m[32mdef shutdown():[m
[32m+[m[32m    print(Fore.RED + "⠋Shutting down..." + Style.RESET_ALL)[m
[32m+[m[32m    time.sleep(1)[m
[32m+[m[32m    clear_screen()[m
[32m+[m[32m    sys.exit()[m
[32m+[m
[32m+[m
[32m+[m[32m# Shell[m
[32m+[m[32mdef shell():[m
[32m+[m[32m    clear_screen()[m
[32m+[m[32m    print("Event Horizon shell")[m
[32m+[m[32m    print([m
[32m+[m[32m        Fore.GREEN[m
[32m+[m[32m        + "⣦ Type 'help' for commands, type 'exit' for exit\n"[m
[32m+[m[32m        + Style.RESET_ALL[m
[32m+[m[32m    )[m
[32m+[m[32m    while True:[m
[32m+[m[32m        command = input("#> ")[m
[32m+[m[32m        # Help[m
[32m+[m[32m        if command == "help":[m
[32m+[m[32m            print("⣦help-show help")[m
[32m+[m[32m            print("⣦clear-clear screen")[m
[32m+[m[32m            print("⣦info-shell info")[m
[32m+[m[32m            print("⣦exit-exit to menu")[m
[32m+[m[32m            print("⣦mkdir-create folder")[m
[32m+[m[32m            print("⣦rmdir-remove folder\n/?-for reference")[m
[32m+[m[32m            print("⣦time-show current time")[m
[32m+[m[32m            print("⣦perf-show CPU & RAM usage")[m
[32m+[m[32m        # Exit[m
[32m+[m[32m        elif command == "exit":[m
[32m+[m[32m            clear_screen()[m
[32m+[m[32m            break[m
[32m+[m[32m        # Clear[m
[32m+[m[32m        elif command == "clear":[m
[32m+[m[32m            clear_screen()[m
[32m+[m[32m            print("⣦Event Horizon shell\n")[m
[32m+[m[32m        # Info[m
[32m+[m[32m        elif command == "info":[m
[32m+[m[32m            print(Fore.GREEN + "\n⣦Event Horizon")[m
[32m+[m[32m            print(f"⣦shell ver> {shell_version}")[m
[32m+[m[32m            print("⣦by quik\n" + Style.RESET_ALL)[m
[32m+[m[32m        # MKdir[m
[32m+[m[32m        elif command == "mkdir":[m
[32m+[m[32m            shell_mkdir = input("Enter folder name> ")[m
[32m+[m[32m            shell_parent_mkdir = input("Create in current dir? Y/N> ")[m
[32m+[m[32m            if shell_parent_mkdir == "Y":[m
[32m+[m[32m                shell_parent_mkdir = "."[m
[32m+[m[32m            else:[m
[32m+[m[32m                shell_parent_mkdir = os.path.expanduser("~")[m
[32m+[m[32m            shell_mk_path = os.path.join(shell_parent_mkdir, shell_mkdir)[m
[32m+[m[32m            try:[m
[32m+[m[32m                os.mkdir(shell_mk_path)[m
[32m+[m[32m                print([m
[32m+[m[32m                    Fore.GREEN + "folder",[m
[32m+[m[32m                    {shell_mkdir},[m
[32m+[m[32m                    "created in" + Style.RESET_ALL,[m
[32m+[m[32m                    {shell_parent_mkdir},[m
[32m+[m[32m                )[m
[32m+[m[32m            except FileExistsError:[m
[32m+[m[32m                print([m
[32m+[m[32m                    Fore.RED + "⣏!⣽",[m
[32m+[m[32m                    {shell_mk_path},[m
[32m+[m[32m                    "already exists!" + Style.RESET_ALL,[m
[32m+[m[32m                )[m
[32m+[m[32m        # RMdir reference[m
[32m+[m[32m        elif command == "rmdir /?":[m
[32m+[m[32m            print([m
[32m+[m[32m                Fore.GREEN + "rmdir| prefix",[m
[32m+[m[32m                Fore.RED[m
[32m+[m[32m                + "/all "[m
[32m+[m[32m                + Fore.GREEN[m
[32m+[m[32m                + "deletes all contents of the folder"[m
[32m+[m[32m                + Style.RESET_ALL,[m
[32m+[m[32m            )[m
[32m+[m[32m        # RMdir[m
[32m+[m[32m        elif command == "rmdir":[m
[32m+[m[32m            shell_rm_path = input("Enter folder path to delete: ")[m
[32m+[m[32m            expanded_path = os.path.expanduser(shell_rm_path)[m
[32m+[m[32m            if not os.path.isabs(expanded_path):[m
[32m+[m[32m                expanded_path = os.path.abspath(expanded_path)[m
[32m+[m[32m            if not os.path.exists(expanded_path):[m
[32m+[m[32m                print(Fore.RED + "⣏!⣽ folder doesn't exist!" + Style.RESET_ALL)[m
[32m+[m[32m            else:[m
[32m+[m[32m                try:[m
[32m+[m[32m                    os.rmdir(expanded_path)[m
[32m+[m[32m                    print([m
[32m+[m[32m                        Fore.GREEN[m
[32m+[m[32m                        + f"Folder '{expanded_path}' deleted successfully!"[m
[32m+[m[32m                        + Style.RESET_ALL[m
[32m+[m[32m                    )[m
[32m+[m[32m                except Exception as e:[m
[32m+[m[32m                    print([m
[32m+[m[32m                        Fore.RED + f"⣏!⣽ Error deleting folder: {e}" + Style.RESET_ALL[m
[32m+[m[32m                    )[m
[32m+[m[32m        # Time[m
[32m+[m[32m        elif command == "time":[m
[32m+[m[32m            shell_time = datetime.now()[m
[32m+[m[32m            shell__time = shell_time.strftime([m
[32m+[m[32m                Fore.BLUE + "%Y-%m-%d %H:%M:%S:%MS" + Style.RESET_ALL[m
[32m+[m[32m            )[m
[32m+[m[32m            print(shell__time)[m
[32m+[m[32m        # RMdir /all[m
[32m+[m[32m        elif command == "rmdir /all":[m
[32m+[m[32m            shell_rm_a_path = input("Enter folder path to delete: ")[m
[32m+[m[32m            expanded_path = os.path.expanduser(shell_rm_a_path)[m
[32m+[m[32m            if not os.path.isabs(expanded_path):[m
[32m+[m[32m                expanded_path = os.path.abspath(expanded_path)[m
[32m+[m
[32m+[m[32m            if not os.path.exists(expanded_path):[m
[32m+[m[32m                print(Fore.RED + "⣏!⣽ folder doesn't exist!" + Style.RESET_ALL)[m
[32m+[m[32m            else:[m
[32m+[m[32m                try:[m
[32m+[m[32m                    shutil.rmtree(expanded_path)[m
[32m+[m[32m                    print([m
[32m+[m[32m                        Fore.GREEN[m
[32m+[m[32m                        + f"Folder '{expanded_path}' deleted successfully!"[m
[32m+[m[32m                        + Style.RESET_ALL[m
[32m+[m[32m                    )[m
[32m+[m[32m                except Exception as e:[m
[32m+[m[32m                    print([m
[32m+[m[32m                        Fore.RED + f"⣏!⣽ Error deleting folder: {e}" + Style.RESET_ALL[m
[32m+[m[32m                    )[m
[32m+[m[32m        # Perf[m
[32m+[m[32m        elif command == "perf":[m
[32m+[m[32m            clear_screen()[m
[32m+[m[32m            print([m
[32m+[m[32m                Fore.RED[m
[32m+[m[32m                + "⣦ System monitor started. Press Ctrl+C to stop."[m
[32m+[m[32m                + Style.RESET_ALL[m
[32m+[m[32m            )[m
[32m+[m[32m            input("Press Enter to continue")[m
[32m+[m[32m            try:[m
[32m+[m[32m                while True:[m
[32m+[m[32m                    clear_screen()[m
[32m+[m[32m                    print([m
[32m+[m[32m                        Fore.RED[m
[32m+[m[32m                        + f"CPU:{psutil.cpu_percent()}% \nRAM: {psutil.virtual_memory().percent}%"[m
[32m+[m[32m                        + Style.RESET_ALL[m
[32m+[m[32m                    )[m
[32m+[m[32m                    time.sleep(1)[m
[32m+[m[32m            except KeyboardInterrupt:[m
[32m+[m[32m                print(Fore.GREEN + "\n⣦ Monitor stopped." + Style.RESET_ALL)[m
[32m+[m[32m                clear_screen()[m
[32m+[m[32m                print("⣦Event Horizon shell\n")[m
[32m+[m[32m        else:[m
[32m+[m[32m            print("⣏!⣽ invalid_choice")[m
[32m+[m
[32m+[m
[32m+[m[32m# Timer[m
[32m+[m[32mdef timer():[m
[32m+[m[32m    timer_time = int(input("enter clock time in seconds> "))[m
[32m+[m[32m    print(timer_time)[m
[32m+[m[32m    for i in range(timer_time):[m
[32m+[m[32m        time.sleep(1)[m
[32m+[m[32m        print(timer_time - i - 1)[m
[32m+[m[32m    print(Fore.GREEN + "Timer finished!" + Style.RESET_ALL)[m
[32m+[m[32m    input("Press Enter to continue")[m
[32m+[m[32m    clear_screen()[m
[32m+[m
[32m+[m
[32m+[m[32m# Сheck internet speed[m
[32m+[m[32mdef speed_test():[m
[32m+[m[32m    print(Fore.CYAN + "⣦ Checking internet speed..." + Style.RESET_ALL)[m
[32m+[m[32m    test_url = "https://speedtest.selectel.ru/10MB"[m
[32m+[m[32m    try:[m
[32m+[m[32m        start_test_time = time.time()[m
[32m+[m[32m        response = requests.get(test_url, timeout=30)[m
[32m+[m[32m        response.raise_for_status()[m
[32m+[m[32m        end_time = time.time()[m
[32m+[m[32m        downloaded = len(response.content)[m
[32m+[m[32m        total_time = max(0.1, end_time - start_test_time)[m
[32m+[m[32m        speed_kbs = downloaded / total_time / 1024[m
[32m+[m[32m        print([m
[32m+[m[32m            Fore.GREEN + f"\nDownloaded: {downloaded / 1024:.1f} KB" + Style.RESET_ALL[m
[32m+[m[32m        )[m
[32m+[m[32m        print(Fore.GREEN + f"Time: {total_time:.2f} seconds" + Style.RESET_ALL)[m
[32m+[m[32m        print(Fore.GREEN + f"Speed: {speed_kbs:.1f} KB/s" + Style.RESET_ALL)[m
[32m+[m[32m    except requests.exceptions.Timeout:[m
[32m+[m[32m        print([m
[32m+[m[32m            Fore.RED[m
[32m+[m[32m            + "\n⣏!⣽ Connection timeout - check your internet connection"[m
[32m+[m[32m            + Style.RESET_ALL[m
[32m+[m[32m        )[m
[32m+[m[32m    except requests.exceptions.ConnectionError:[m
[32m+[m[32m        print([m
[32m+[m[32m            Fore.RED[m
[32m+[m[32m            + "\n⣏!⣽ Connection error - check your internet connection"[m
[32m+[m[32m            + Style.RESET_ALL[m
[32m+[m[32m        )[m
[32m+[m[32m    except Exception as e:[m
[32m+[m[32m        print(Fore.RED + f"\n⣏!⣽ Error: {str(e)}" + Style.RESET_ALL)[m
[32m+[m[32m    input("Press Enter to continue")[m
[32m+[m[32m    clear_screen()[m
[32m+[m
[32m+[m
[32m+[m[32m# Menu[m
[32m+[m[32mdef menu():[m
[32m+[m[32m    event_horizon()[m
[32m+[m[32m    while True:[m
[32m+[m[32m        print([m
[32m+[m[32m            Style.BRIGHT[m
[32m+[m[32m            + "1. calc\n2. echo\n3. ASCII arts\n4. shell info\n5. shutdown\n6. shell\n7. timer\n8. check updates\n9. check internet speed"[m
[32m+[m[32m            + Style.RESET_ALL[m
[32m+[m[32m        )[m
[32m+[m[32m        choice = input(Fore.RED + "select> " + Style.RESET_ALL)[m
[32m+[m[32m        if choice == "1":[m
[32m+[m[32m            clear_screen()[m
[32m+[m[32m            calc()[m
[32m+[m[32m        elif choice == "2":[m
[32m+[m[32m            clear_screen()[m
[32m+[m[32m            echo()[m
[32m+[m[32m        elif choice == "3":[m
[32m+[m[32m            clear_screen()[m
[32m+[m[32m            ascii_arts()[m
[32m+[m[32m        elif choice == "4":[m
[32m+[m[32m            clear_screen()[m
[32m+[m[32m            os_info()[m
[32m+[m[32m        elif choice == "5":[m
[32m+[m[32m            clear_screen()[m
[32m+[m[32m            shutdown()[m
[32m+[m[32m        elif choice == "6":[m
[32m+[m[32m            shell()[m
[32m+[m[32m        elif choice == "7":[m
[32m+[m[32m            clear_screen()[m
[32m+[m[32m            timer()[m
[32m+[m[32m        elif choice == "8":[m
[32m+[m[32m            clear_screen()[m
[32m+[m[32m            check_updates()[m
[32m+[m[32m            input("Press Enter to continue")[m
[32m+[m[32m            clear_screen()[m
[32m+[m[32m        elif choice == "9":[m
[32m+[m[32m            clear_screen()[m
[32m+[m[32m            speed_test()[m
[32m+[m[32m        else:[m
[32m+[m[32m            print("⣏!⣽ invalid_choice")[m
[32m+[m[32m            time.sleep(1)[m
[32m+[m[32m            clear_screen()[m
[32m+[m
[32m+[m
[32m+[m[32mmenu()[m
